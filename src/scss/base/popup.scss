@use "/src/scss/base/mixins.scss";
@use "/src/scss/variables.scss";
@use "sass:math";

body::after {
	content: "";
	position: fixed;
  background-color: var(--modal_bg);
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	opacity: 0;
	transition: opacity 0.8s ease 0s;
	pointer-events: none;
	z-index: 149;
  // backdrop-filter: blur(mixins.toRem(5));
}
.popup-show body::after {
	opacity: 1;
}
.popup {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	transition: visibility 0.8s ease 0s;
	visibility: hidden;
	pointer-events: none;
  ._isChrome &::-webkit-scrollbar {
    width: mixins.toRem(4);
  }
  ._isChrome &::-webkit-scrollbar-thumb {
    border-color: transparent;
  }
  &_show {
    z-index: 150;
    visibility: visible;
    overflow: auto;
    pointer-events: auto;
    overscroll-behavior: contain;
  }
  @media (max-width:mixins.toEm(variables.$mobile)){
    ._isChrome &::-webkit-scrollbar {
      width: 0;
    }
  }

  &__wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100%;
    width: 100%;
    @media (min-width:mixins.toEm(variables.$mobile)){
      justify-content: center;
      padding: mixins.toRem(30) mixins.toRem(10);
    }
    @media (max-width:mixins.toEm(variables.$mobile)){
      justify-content: flex-end;
      padding-top: mixins.toRem(30);
      // height: 100%;
      // overflow: hidden;
    }
  }

  &__content {
    // visibility: hidden;
    background-color: var(--bg, var(--white));
    border-radius: mixins.toRem(20);
    --padding-top-plus: #{mixins.toRem(30)};
    width: 100%;
    max-width: mixins.toRem(900);
    position: relative;
    padding: var(--padding);
    @include mixins.adaptiveValue("--padding", 50, 24);
    .lock & {
      visibility: visible;
    }
    .loaded & {
      transition: all 0.3s linear 0s;
    }

    @media (min-width: mixins.toEm(variables.$mobile) ){
      opacity: 0;
      translate: 0 mixins.toRem(20);
    }
    @media (max-width: mixins.toEm(variables.$mobile) ){
      // max-height: 100%;
      border-radius: mixins.toRem(20) mixins.toRem(20) 0 0;
      translate: 0 100%;
      // min-height: 80vh;
      // overflow: auto;
      display: flex;
      flex-direction: column;
      padding-top: calc(var(--padding) + var(--padding-top-plus));
    }

    .popup_show & {
      visibility: visible;
      @media (min-width:mixins.toEm(variables.$mobile)){
        opacity: 1;
        translate: none;
      }
      @media (max-width:mixins.toEm(variables.$mobile)){
        translate: 0 var(--translateY, 0px);
      }
    }
    ._close & {
      @media (min-width:mixins.toEm(variables.$mobile)){
        opacity: 0;
        translate: 0 mixins.toRem(-20);
      }
    }
    
    .successPopup & {
      @media (width >= #{mixins.toEm(variables.$mobile)}){
        max-width: mixins.toRem(400);
      }
    }
  }

  &__body {
    .successPopup & {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: mixins.toRem(20);
      text-align: center;
      line-height: 1.35;
    }
    @media (max-width:mixins.toEm(variables.$mobile)){
      // max-height: 100%;
      // overflow: auto;
      flex: 1 1 auto;
      display: flex;
      flex-direction: column;
    }
  }

  &__close {
    outline: none;
    position: absolute;
    top: 0;
    right: 0;
    width: mixins.toRem(18);
    height: mixins.toRem(18);
    display: flex;
    justify-content:center;align-items: center;
    color: var(--secontary-text-color);
    box-sizing: content-box;
    padding: mixins.toRem(16);

    svg {
      max-width: 100%;
      max-height: 100%;
    }

    &.btn {
      --btncolor: var(--mainColor);
      position: absolute;
      @media (min-width:mixins.toEm(variables.$mobile)){
        --btnbg: var(--tab_bg);
        --btnbdclr: var(--tab_bg);
      }
      @media (max-width:mixins.toEm(variables.$mobile)){
        --btnbg: var(--bg);
        --btnbdclr: var(--bg);
      }
    }

    @media (width < #{mixins.toEm(variables.$mobile)}){
      display: none;
    }
  }

  &__dragclose {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: mixins.toRem(52);
    outline: none;
    &::before{
      content:'';
      position: absolute;
      width: 30%;
      height: mixins.toRem(5);
      border-radius: mixins.toRem(9999);
      background-color: rgba(0, 0, 0, 0.5);
      top: 50%;
      left: 50%;
      translate: -50% -50%;
    }

    @media (min-width:mixins.toEm(variables.$mobile)){
      display: none;
    }
  }

  &__subtitle {
    font-weight: 700;
    font-size: mixins.toRem(24);
    text-align: center;
  }

  &__text {
    font-weight: 500;
    font-size: mixins.toRem(18);
  }
}